# 4-print_square.txt

============================
How to Use 4-print_square.py
============================

This module includes a function called "print_square(size)" for printing a square shape.

Usage
=====

Squares are printed using the "#" character. The "size" parameter represents both the height and width of the square.

Example:
```python
>>> print_square = __import__('4-print_square').print_square
>>> print_square(1)
#
```

Example:
```python
>>> print_square(4)
####
####
####
####
```

Example:
```python
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########
```

If the "size" parameter is set to zero, the function doesn't print anything.

Example:
```python
>>> print_square(0)
```

Invalid Sizes
=============

The "size" parameter must be an integer. Otherwise, a TypeError is raised.

Examples:
```python
>>> print_square("not an int")
TypeError: size must be an integer

>>> print_square(5.5)
TypeError: size must be an integer

>>> print_square(None)
TypeError: size must be an integer
```

If the "size" parameter is less than zero, a ValueError is raised.

Example:
```python
>>> print_square(-7)
ValueError: size must be >= 0
```

It's worth noting that type-checking is performed before value-checking.

Example:
```python
>>> print_square(-7.5)
TypeError: size must be an integer
```

At least one argument must be provided.

Example:
```python
>>> print_square()
TypeError: print_square() missing 1 required positional argument: 'size'
```
